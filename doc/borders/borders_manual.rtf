{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f4\froman\fprq2\fcharset128 Liberation Sans{\*\falt Arial};}{\f5\froman\fprq2\fcharset128 Liberation Mono{\*\falt Courier New};}{\f6\fnil\fprq2\fcharset128 Liberation Mono{\*\falt Courier New};}{\f7\fnil\fprq2\fcharset128 Liberation Serif{\*\falt Times New Roman};}}
{\colortbl;\red0\green0\blue0;\red128\green128\blue128;}
{\stylesheet{\s0\snext0\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\loch\f3\fs24\lang3081 Normal;}
{\s15\sbasedon0\snext16\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af4\afs24\alang1081\loch\f4\fs28\lang3081 Heading;}
{\s16\sbasedon0\snext16\sl288\slmult1\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa140\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af3\afs24\alang1081\loch\f3\fs24\lang3081 Text Body;}
{\s17\sbasedon16\snext17\sl288\slmult1\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa140\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af3\afs24\alang1081\loch\f3\fs24\lang3081 List;}
{\s18\sbasedon0\snext18\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb120\sa120\ltrpar\cf1\i\kerning1\dbch\af7\langfe1081\dbch\af3\afs24\alang1081\loch\f3\fs24\lang3081 Caption;}
{\s19\sbasedon0\snext19\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af3\afs24\alang1081\loch\f3\fs24\lang3081 Index;}
{\s20\sbasedon0\snext20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081 Preformatted Text;}
}{\*\generator LibreOffice/4.4.3.2$Linux_X86_64 LibreOffice_project/40m0$Build-2}{\info{\creatim\yr0\mo0\dy0\hr0\min0}{\revtim\yr2016\mo7\dy6\hr15\min32}{\printim\yr0\mo0\dy0\hr0\min0}}\deftab709
\viewscale80
{\*\pgdsctbl
{\pgdsc0\pgdscuse451\pgwsxn11906\pghsxn16838\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt0 Default Style;}}
\formshade{\*\pgdscno0}\paperh16838\paperw11906\margl1134\margr1134\margt1134\margb1134\sectd\sbknone\sectunlocked1\pgndec\pgwsxn11906\pghsxn16838\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
{\*\ftnsep\chftnsep}\pgndec\pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\qc\nowidctlpar\sb0\sa0{\cf1\ul\ulc0\b\dbch\af6\langfe1081\rtlch \ltrch\loch\fs32\lang3081
Polygons and borders generation manual}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\qc\nowidctlpar\sb0\sa0\cf1\ul\ulc0\b\dbch\af6\langfe1081\rtlch \ltrch\loch\fs32\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
This manual describes possible procedure of generation of Voronoi polygon coverage and coastlines automatic marking.}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
The process consists of several steps. Some of them may be avoided or replaced with user`s own analogues.}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
To make this process easy and understandable we provide additional modules with all required functionality for automatical generation of various polygon meshes and different coasts marking algorithms.}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
The module that supports mesh and borders generation is called 'border_gen.py' and it should be manipulated by user-specified controlling script file. Such script example is 'borders.py'. Also it depends from external fortran program for the Voronoi diagrams generation.}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
1) }{\cf1\ul\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
Preparing contours}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
First of all one need to initialize 'Border' class instance from module 'border_gen.py'. This instance wil accumulate user`s data and provide functionality for that data processing.}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\i\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang3081
import border_gen}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\i\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang3081
bord = border_gen.Border('.../shapefile')}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
In this example Border instance is initialized with the name of shapefile. This file is automatically loaded into border`s field 'contour' as a list of longitude-latitude pairs, but one can create empty border and fill it later.}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
After creating an instance of Border one can add some contours to it from either shapefiles or user`s tabled files that contain two coloumns of lon-lat geographical coordinates in degrees.}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\i\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang3081
bord.add_shapes_contour( shapes, (minlo, maxlo, minla, maxla) )}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\i\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang3081
bord.add_contour( 'points.ll' )}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
Here shapes is a list of shapes from user`s shapefile, 'points.ll' is tabled file with points in lon-lat convension and (minlo, maxlo, minla, maxla) is a tuple that specifies geographic domain. All domains in this module are optional. If domain is given then the called method will make effect on points inside that domain. }
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
After all contour points are added they could be filtered by minimal angular distance between them. This could be done by calling:}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\i\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang3081
bord.filter_contour( 0.15, (0, 360, 50, 90) )}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
where 0.15 is angular distance (called 'density') in degrees. Second argument is geographic domain. If given \u8211\'3f filter will make effect on inner point. Those which are outside domain will not be filtered.}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
Contour adding and filtering operations are independent and may me called in arbitrary order. Contour field itself can be accessed and edited directly, but should not.}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
2) }{\cf1\ul\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
Adding vertices}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
After contours are prepared one should add randomly generated high dense points close to desired high-resolution borders. This points are needed for proper contours shaping. }
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
To cover some required domain with points one can easily call:}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\i\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang3081
bord.add_hp_verts( 0.1, 0.2, (170, 210, 60, 70) )}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
where first argument is initial average points density, second argument is filter density (similar to contour filter) and third optional argument is geographic domain.}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
All these points are storaged in 'verts' field of Border instance. It can be accessed and edited directlym but also should not.}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
3) }{\cf1\ul\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
Generating borders}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
After all verts and contours are ready \u8211\'3f one can simply generate border and contour files by calling:}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\i\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang3081
bord.gener_borders( 100, 0.1, (90, 270, 50, 90), file_b='brds.ll')}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
This method takes one main (first) argument \u8211\'3f thickness of border zone in kilometers. This means that the class will merge contours and verts into one array and put all the points those are within 'thick' kilometers range from contained contours into output file.}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
Three other optional arguments are density for filtering points after before final output, geographic domain (works as before) and output file name.}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
Also this method will generate two contour files called 'contours.ll' and 'contours.xyz' that contain points from 'contour' filed inside domain in terms lon-lat and x-y-z respectively.}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
4) }{\cf1\ul\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
Adding coverage}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
After border and contour files are generated one should cover the globe with another set of randomly generated points. This points are required for proper Voronoi diagrams building. }
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
One can generate this points using same methods of Border instance as for generating inner verts and save 'verts' field into file or other methods from other modules or even use one`s own file that contains points in lon-lat convension ni degrees.}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
5) }{\cf1\ul\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
Filtering and merging}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
When the border and covering files are ready they have to be filtered to avoid areas overlaping. If that would not be done \u8211\'3f Voronoi generator may stop with error or required points (and polygons) density will be violated.}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
Several border files could be merged by calling:}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\i\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang3081
bord.merge_borders( file1, file2, thick, file_out='merged.ll' )}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\i0\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\i0\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
this will put all points from file2 and only the points from file1 that are out of 'thick' range (in kilometers) from any point from file2 into file_out.}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
When all borders from several files are merged into one huge border \u8211\'3f covering file can be filtered with it by calling:}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\i\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang3081
bord.extract_borders_from_v( file_v, file_b, thick, file_out='extrd.ll')}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
this will extract all points from file_v and put those are out of 'thick' range from points in file_b intp file_out. The difference from previous method is that the files will not be mergedm meaning that file_out will contain only the points from file_v.}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
6) }{\cf1\i0\ul\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
Files finilizing}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\i0\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
When all borders are merged and all covers are filtered one should save all the points into one single file for Voronoi module processing. }
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\i0\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
To make this operation easy siku provides points files manipulating module called 'geofiles.py'. This module has several functions for reading, converting and writing geographic point arrays in different convensions. }
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\i0\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
To merge the all points into final file one can easily call:}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\i\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang3081
verts = geofiles.r_lonlat( 'extrd.ll' )}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\i\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang3081
bords = geofiles.r_lonlat( 'brds.ll' )}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\i\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang3081
geofiles.w_xyz( 'shapes.xyz', geofiles.lonlat_to_xyz( verts + bords ) )}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\i0\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
this will read two files into two lists, add this lists, convert into x-y-z coordinates (on unit sphere) and write into file 'shapes.xyz'.}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\i0\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
After this is done \u8211\'3f one can pass this file to Voronoi module, run fortran binary with this file name as argument and gain two files containing data of generated polygons.}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\i0\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
7) }{\cf1\i0\ul\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
Polygon upload and marking}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\i0\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
When poygon files are generated they could be loaded into siku scenatio by module called 'poly_voronoi'.}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\i0\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\i0\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
Inside the scenario one should create an instance of PolyVor class that will load this two files as a list of convex polygons vertices lists:}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\i0\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\i\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang3081
PV = PolyVor( 'file.voronoi.xyz', 'file.voronoi.xyzf' )}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\i0\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\i0\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
This data is contaned in 'coords' field. The instance may be created empty and loaded afterwards with 'load' method call.}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\i0\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\i0\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
After polygons are loaded they may be }{{\*\bkmkstart __DdeLink__772_1532126173}\cf1\i0\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
additionally}{{\*\bkmkend __DdeLink__772_1532126173}\cf1\i0\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
 filtered. }
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\i0\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\i0\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
Method '}{\cf1\i\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
filter_}{\cf1\i0\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
' will throw out all polygons from PolyVor instance those contain at least one vertex located out of specified region.}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\i0\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\i0\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
Method '}{\cf1\i\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
clear_the_land}{\cf1\i0\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
' will throw out all polygons those have all the vertices located NOT on ocean.}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\i0\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\i0\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
Method '}{\cf1\i\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
get_border_by_gmt}{\cf1\i0\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
' will return thi list of polygon indexes (matching current 'coords' fild list) for all polygons those have both 'ocean' and 'not ocean' vertices.}
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\cf1\i0\ulnone\ulc0\dbch\af7\langfe1081\rtlch \ltrch\loch\fs20\lang3081

\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0{\cf1\i0\ulnone\ulc0\b0\dbch\af6\langfe1081\rtlch \ltrch\loch\fs28\lang3081
After coordinates list is ready it can be passed to scenario coordinates, initialized as elements and loaded into the core. }
\par \pard\plain \s20\ql\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\ltrpar\cf1\kerning1\dbch\af7\langfe1081\dbch\af5\afs24\alang1081\loch\f5\fs20\lang3081\ql\nowidctlpar\sb0\sa0\rtlch \ltrch\loch

\par }